{"version":3,"sources":["components/Book.js","utils/categories.js","components/CategoryFilter.js","containers/BooksList.js","actions/index.js","containers/BooksForm.js","components/Header.js","components/App.js","reducers/books.js","reducers/filter.js","reducers/index.js","index.js"],"names":["Book","props","book","onRemove","className","category","title","id","type","onClick","CATEGORIES","CategoryFilter","state","filter","handleChange","bind","event","onFilterChange","this","setState","target","value","onChange","key","map","c","React","Component","connect","bookList","bookReducer","books","filterReducer","dispatch","removeBook","changeFilter","b","BooksForm","handleSubmit","handleTitleChange","handleCategoryChange","createBook","preventDefault","Math","round","random","onSubmit","name","placeholder","style","height","Header","icon","faUser","App","initialState","action","filterReducter","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5722c1c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Book = props => {\n  const { book, onRemove } = props;\n  return (\n    <div className=\"Book\">\n      <div className=\"infos\">\n        <div className=\"category\">{book.category}</div>\n        <div className=\"title\">{book.title}</div>\n        <div className=\"id\">{book.id}</div>\n      </div>\n\n      <button type=\"button\" onClick={onRemove}>Remove</button>\n    </div>\n  );\n};\n\nBook.propTypes = {\n  book: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default Book;\n","const CATEGORIES = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nexport default CATEGORIES;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CATEGORIES from '../utils/categories';\n\nclass CategoryFilter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: 'All',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { onFilterChange } = this.props;\n\n    this.setState({\n      filter: event.target.value,\n    });\n    onFilterChange(event.target.value);\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <div className=\"CategoryList\">\n        <select value={filter} onChange={this.handleChange} className=\"input content-inside\">\n          <option key=\"All\" value=\"All\">All</option>\n          {CATEGORIES.map(c => <option key={c} value={c}>{c}</option>)}\n        </select>\n      </div>\n    );\n  }\n}\n\nCategoryFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n};\n\n\nexport default CategoryFilter;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter } from '../actions';\nimport CategoryFilter from '../components/CategoryFilter';\n\nconst BooksList = props => {\n  const { filter, removeBook, changeFilter } = props;\n  let { bookList } = props;\n\n  const handleRemove = book => removeBook(book);\n\n  const renderBooks = () => {\n    if (filter !== 'All') {\n      bookList = bookList.filter(b => b.category === filter);\n    }\n\n    return bookList.map(b => <Book key={`${b.title}-${b.id}`} book={b} onRemove={() => handleRemove(b)} />);\n  };\n\n  const handleFilterChange = filter => changeFilter(filter);\n\n  return (\n    <div className=\"BooksList\">\n      <CategoryFilter onFilterChange={handleFilterChange} />\n      <div>\n        {renderBooks()}\n      </div>\n    </div>\n  );\n};\n\nBooksList.propTypes = {\n  bookList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  bookList: state.bookReducer.books,\n  filter: state.filterReducer.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeBook: book => dispatch(removeBook(book)),\n  changeFilter: filter => dispatch(changeFilter(filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n","export const CREATE_BOOK = 'CREATE_BOOK';\nexport const REMOVE_BOOK = 'REMOVE_BOOK';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n\nexport const createBook = book => ({ type: CREATE_BOOK, book });\nexport const removeBook = book => ({ type: REMOVE_BOOK, id: book.id });\n\nexport const changeFilter = category => ({ type: CHANGE_FILTER, category });\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createBook } from '../actions';\nimport CATEGORIES from '../utils/categories';\nimport '../App.css';\n\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      category: CATEGORIES[0],\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n  }\n\n  handleCategoryChange(event) {\n    this.setState({\n      category: event.target.value,\n    });\n  }\n\n  handleTitleChange(event) {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    const { title, category } = this.state;\n    const { createBook } = this.props;\n    event.preventDefault();\n\n    const book = {\n      id: Math.round(Math.random() * 100),\n      title,\n      category,\n    };\n    createBook(book);\n    this.setState({\n      title: '',\n      category: CATEGORIES[0],\n    });\n  }\n\n  render() {\n    const { title, category } = this.state;\n\n    return (\n      <div className=\"BooksForm\">\n        <div className=\"title\">Add new book</div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" className=\"input content-inside\" name=\"title\" placeholder=\"Title\" value={title} onChange={this.handleTitleChange} />\n          <select className=\"input content-inside\" style={{ height: 'auto' }} value={category} onChange={this.handleCategoryChange}>\n            {CATEGORIES.map(c => <option key={c} value={c}>{c}</option>)}\n          </select>\n\n          <button type=\"submit\">ADd book</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  createBook: book => dispatch(createBook(book)),\n});\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport '../App.css';\n\nconst Header = () => (\n  <header>\n    <nav className=\"nav\">\n      <div className=\"title\">Bookstore CMS</div>\n      <div className=\"links\">\n        <ul>\n          <li className=\"active\">Books</li>\n          <li>Categories</li>\n        </ul>\n      </div>\n      <div className=\"margin-left-auto avatar\">\n        <FontAwesomeIcon icon={faUser} />\n      </div>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport BooksList from '../containers/BooksList';\nimport BooksForm from '../containers/BooksForm';\nimport '../App.css';\nimport Header from './Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <Header />\n        <div className=\"container\">\n          <BooksList />\n          <BooksForm />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { CREATE_BOOK, REMOVE_BOOK } from '../actions';\n\nconst initialState = { books: [] };\n\nconst bookReducer = (state = initialState, action) => {\n  const { books } = state;\n\n  switch (action.type) {\n    case CREATE_BOOK:\n      return { books: [...books, action.book] };\n\n    case REMOVE_BOOK:\n      return { books: books.filter(b => b.id !== action.id) };\n\n    default:\n      return state;\n  }\n};\n\nexport default bookReducer;\n","import { CHANGE_FILTER } from '../actions';\n\nconst initialState = { filter: 'All' };\n\nconst filterReducter = (state = initialState, action) => {\n  const { filter } = state;\n  switch (action.type) {\n    case CHANGE_FILTER:\n      if (filter !== action.category) {\n        return { filter: action.category };\n      }\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducter;\n","import { combineReducers } from 'redux';\nimport bookReducer from './books';\nimport filterReducer from './filter';\n\nconst rootReducer = combineReducers({\n  bookReducer,\n  filterReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}